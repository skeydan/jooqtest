/**
 * This class is generated by jOOQ
 */
package com.trivadis.jooq.generated.sakila.tables;


import com.trivadis.jooq.generated.sakila.DefaultSchema;
import com.trivadis.jooq.generated.sakila.Keys;
import com.trivadis.jooq.generated.sakila.tables.records.PaymentRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payment extends TableImpl<PaymentRecord> {

	private static final long serialVersionUID = 913117492;

	/**
	 * The reference instance of <code>PAYMENT</code>
	 */
	public static final Payment PAYMENT = new Payment();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PaymentRecord> getRecordType() {
		return PaymentRecord.class;
	}

	/**
	 * The column <code>PAYMENT.PAYMENT_ID</code>.
	 */
	public final TableField<PaymentRecord, BigDecimal> PAYMENT_ID = createField("PAYMENT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>PAYMENT.CUSTOMER_ID</code>.
	 */
	public final TableField<PaymentRecord, BigDecimal> CUSTOMER_ID = createField("CUSTOMER_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>PAYMENT.STAFF_ID</code>.
	 */
	public final TableField<PaymentRecord, BigDecimal> STAFF_ID = createField("STAFF_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>PAYMENT.RENTAL_ID</code>.
	 */
	public final TableField<PaymentRecord, BigDecimal> RENTAL_ID = createField("RENTAL_ID", org.jooq.impl.SQLDataType.NUMERIC.defaulted(true), this, "");

	/**
	 * The column <code>PAYMENT.AMOUNT</code>.
	 */
	public final TableField<PaymentRecord, BigDecimal> AMOUNT = createField("AMOUNT", org.jooq.impl.SQLDataType.NUMERIC.precision(5, 2).nullable(false), this, "");

	/**
	 * The column <code>PAYMENT.PAYMENT_DATE</code>.
	 */
	public final TableField<PaymentRecord, Date> PAYMENT_DATE = createField("PAYMENT_DATE", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>PAYMENT.LAST_UPDATE</code>.
	 */
	public final TableField<PaymentRecord, Date> LAST_UPDATE = createField("LAST_UPDATE", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * Create a <code>PAYMENT</code> table reference
	 */
	public Payment() {
		this("PAYMENT", null);
	}

	/**
	 * Create an aliased <code>PAYMENT</code> table reference
	 */
	public Payment(String alias) {
		this(alias, PAYMENT);
	}

	private Payment(String alias, Table<PaymentRecord> aliased) {
		this(alias, aliased, null);
	}

	private Payment(String alias, Table<PaymentRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PaymentRecord> getPrimaryKey() {
		return Keys.SYS_C0012618;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PaymentRecord>> getKeys() {
		return Arrays.<UniqueKey<PaymentRecord>>asList(Keys.SYS_C0012618);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PaymentRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PaymentRecord, ?>>asList(Keys.FK_PAYMENT_CUSTOMER, Keys.FK_PAYMENT_STAFF, Keys.FK_PAYMENT_RENTAL);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Payment as(String alias) {
		return new Payment(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Payment rename(String name) {
		return new Payment(name, null);
	}
}
