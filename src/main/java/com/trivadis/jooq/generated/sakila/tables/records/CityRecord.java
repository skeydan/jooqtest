/**
 * This class is generated by jOOQ
 */
package com.trivadis.jooq.generated.sakila.tables.records;


import com.trivadis.jooq.generated.sakila.tables.City;

import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityRecord extends UpdatableRecordImpl<CityRecord> implements Record4<BigDecimal, String, BigDecimal, Date> {

	private static final long serialVersionUID = 777931149;

	/**
	 * Setter for <code>CITY.CITY_ID</code>.
	 */
	public void setCityId(BigDecimal value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>CITY.CITY_ID</code>.
	 */
	public BigDecimal getCityId() {
		return (BigDecimal) getValue(0);
	}

	/**
	 * Setter for <code>CITY.CITY</code>.
	 */
	public void setCity(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>CITY.CITY</code>.
	 */
	public String getCity() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>CITY.COUNTRY_ID</code>.
	 */
	public void setCountryId(BigDecimal value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>CITY.COUNTRY_ID</code>.
	 */
	public BigDecimal getCountryId() {
		return (BigDecimal) getValue(2);
	}

	/**
	 * Setter for <code>CITY.LAST_UPDATE</code>.
	 */
	public void setLastUpdate(Date value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>CITY.LAST_UPDATE</code>.
	 */
	public Date getLastUpdate() {
		return (Date) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<BigDecimal> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<BigDecimal, String, BigDecimal, Date> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<BigDecimal, String, BigDecimal, Date> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field1() {
		return City.CITY.CITY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return City.CITY.CITY_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field3() {
		return City.CITY.COUNTRY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field4() {
		return City.CITY.LAST_UPDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value1() {
		return getCityId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getCity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value3() {
		return getCountryId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value4() {
		return getLastUpdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CityRecord value1(BigDecimal value) {
		setCityId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CityRecord value2(String value) {
		setCity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CityRecord value3(BigDecimal value) {
		setCountryId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CityRecord value4(Date value) {
		setLastUpdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CityRecord values(BigDecimal value1, String value2, BigDecimal value3, Date value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CityRecord
	 */
	public CityRecord() {
		super(City.CITY);
	}

	/**
	 * Create a detached, initialised CityRecord
	 */
	public CityRecord(BigDecimal cityId, String city, BigDecimal countryId, Date lastUpdate) {
		super(City.CITY);

		setValue(0, cityId);
		setValue(1, city);
		setValue(2, countryId);
		setValue(3, lastUpdate);
	}
}
