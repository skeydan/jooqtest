/**
 * This class is generated by jOOQ
 */
package com.trivadis.jooq.generated.sakila.tables.records;


import com.trivadis.jooq.generated.sakila.tables.Store;

import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreRecord extends UpdatableRecordImpl<StoreRecord> implements Record4<BigDecimal, BigDecimal, BigDecimal, Date> {

	private static final long serialVersionUID = -890582949;

	/**
	 * Setter for <code>STORE.STORE_ID</code>.
	 */
	public void setStoreId(BigDecimal value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>STORE.STORE_ID</code>.
	 */
	public BigDecimal getStoreId() {
		return (BigDecimal) getValue(0);
	}

	/**
	 * Setter for <code>STORE.MANAGER_STAFF_ID</code>.
	 */
	public void setManagerStaffId(BigDecimal value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>STORE.MANAGER_STAFF_ID</code>.
	 */
	public BigDecimal getManagerStaffId() {
		return (BigDecimal) getValue(1);
	}

	/**
	 * Setter for <code>STORE.ADDRESS_ID</code>.
	 */
	public void setAddressId(BigDecimal value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>STORE.ADDRESS_ID</code>.
	 */
	public BigDecimal getAddressId() {
		return (BigDecimal) getValue(2);
	}

	/**
	 * Setter for <code>STORE.LAST_UPDATE</code>.
	 */
	public void setLastUpdate(Date value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>STORE.LAST_UPDATE</code>.
	 */
	public Date getLastUpdate() {
		return (Date) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<BigDecimal> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<BigDecimal, BigDecimal, BigDecimal, Date> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<BigDecimal, BigDecimal, BigDecimal, Date> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field1() {
		return Store.STORE.STORE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field2() {
		return Store.STORE.MANAGER_STAFF_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field3() {
		return Store.STORE.ADDRESS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field4() {
		return Store.STORE.LAST_UPDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value1() {
		return getStoreId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value2() {
		return getManagerStaffId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value3() {
		return getAddressId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value4() {
		return getLastUpdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord value1(BigDecimal value) {
		setStoreId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord value2(BigDecimal value) {
		setManagerStaffId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord value3(BigDecimal value) {
		setAddressId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord value4(Date value) {
		setLastUpdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord values(BigDecimal value1, BigDecimal value2, BigDecimal value3, Date value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StoreRecord
	 */
	public StoreRecord() {
		super(Store.STORE);
	}

	/**
	 * Create a detached, initialised StoreRecord
	 */
	public StoreRecord(BigDecimal storeId, BigDecimal managerStaffId, BigDecimal addressId, Date lastUpdate) {
		super(Store.STORE);

		setValue(0, storeId);
		setValue(1, managerStaffId);
		setValue(2, addressId);
		setValue(3, lastUpdate);
	}
}
