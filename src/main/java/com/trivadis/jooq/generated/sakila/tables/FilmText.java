/**
 * This class is generated by jOOQ
 */
package com.trivadis.jooq.generated.sakila.tables;


import com.trivadis.jooq.generated.sakila.DefaultSchema;
import com.trivadis.jooq.generated.sakila.Keys;
import com.trivadis.jooq.generated.sakila.tables.records.FilmTextRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmText extends TableImpl<FilmTextRecord> {

	private static final long serialVersionUID = 1824101955;

	/**
	 * The reference instance of <code>FILM_TEXT</code>
	 */
	public static final FilmText FILM_TEXT = new FilmText();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FilmTextRecord> getRecordType() {
		return FilmTextRecord.class;
	}

	/**
	 * The column <code>FILM_TEXT.FILM_ID</code>.
	 */
	public final TableField<FilmTextRecord, BigDecimal> FILM_ID = createField("FILM_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>FILM_TEXT.TITLE</code>.
	 */
	public final TableField<FilmTextRecord, String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>FILM_TEXT.DESCRIPTION</code>.
	 */
	public final TableField<FilmTextRecord, String> DESCRIPTION = createField("DESCRIPTION", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>FILM_TEXT</code> table reference
	 */
	public FilmText() {
		this("FILM_TEXT", null);
	}

	/**
	 * Create an aliased <code>FILM_TEXT</code> table reference
	 */
	public FilmText(String alias) {
		this(alias, FILM_TEXT);
	}

	private FilmText(String alias, Table<FilmTextRecord> aliased) {
		this(alias, aliased, null);
	}

	private FilmText(String alias, Table<FilmTextRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FilmTextRecord> getPrimaryKey() {
		return Keys.SYS_C0012588;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FilmTextRecord>> getKeys() {
		return Arrays.<UniqueKey<FilmTextRecord>>asList(Keys.SYS_C0012588);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmText as(String alias) {
		return new FilmText(alias, this);
	}

	/**
	 * Rename this table
	 */
	public FilmText rename(String name) {
		return new FilmText(name, null);
	}
}
