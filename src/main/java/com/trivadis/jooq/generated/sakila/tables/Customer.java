/**
 * This class is generated by jOOQ
 */
package com.trivadis.jooq.generated.sakila.tables;


import com.trivadis.jooq.generated.sakila.DefaultSchema;
import com.trivadis.jooq.generated.sakila.Keys;
import com.trivadis.jooq.generated.sakila.tables.records.CustomerRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Customer extends TableImpl<CustomerRecord> {

	private static final long serialVersionUID = 990672517;

	/**
	 * The reference instance of <code>CUSTOMER</code>
	 */
	public static final Customer CUSTOMER = new Customer();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CustomerRecord> getRecordType() {
		return CustomerRecord.class;
	}

	/**
	 * The column <code>CUSTOMER.CUSTOMER_ID</code>.
	 */
	public final TableField<CustomerRecord, BigDecimal> CUSTOMER_ID = createField("CUSTOMER_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>CUSTOMER.STORE_ID</code>.
	 */
	public final TableField<CustomerRecord, BigDecimal> STORE_ID = createField("STORE_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>CUSTOMER.FIRST_NAME</code>.
	 */
	public final TableField<CustomerRecord, String> FIRST_NAME = createField("FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>CUSTOMER.LAST_NAME</code>.
	 */
	public final TableField<CustomerRecord, String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>CUSTOMER.EMAIL</code>.
	 */
	public final TableField<CustomerRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(50).defaulted(true), this, "");

	/**
	 * The column <code>CUSTOMER.ADDRESS_ID</code>.
	 */
	public final TableField<CustomerRecord, BigDecimal> ADDRESS_ID = createField("ADDRESS_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>CUSTOMER.ACTIVE</code>.
	 */
	public final TableField<CustomerRecord, String> ACTIVE = createField("ACTIVE", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>CUSTOMER.CREATE_DATE</code>.
	 */
	public final TableField<CustomerRecord, Date> CREATE_DATE = createField("CREATE_DATE", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>CUSTOMER.LAST_UPDATE</code>.
	 */
	public final TableField<CustomerRecord, Date> LAST_UPDATE = createField("LAST_UPDATE", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * Create a <code>CUSTOMER</code> table reference
	 */
	public Customer() {
		this("CUSTOMER", null);
	}

	/**
	 * Create an aliased <code>CUSTOMER</code> table reference
	 */
	public Customer(String alias) {
		this(alias, CUSTOMER);
	}

	private Customer(String alias, Table<CustomerRecord> aliased) {
		this(alias, aliased, null);
	}

	private Customer(String alias, Table<CustomerRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CustomerRecord> getPrimaryKey() {
		return Keys.SYS_C0012560;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CustomerRecord>> getKeys() {
		return Arrays.<UniqueKey<CustomerRecord>>asList(Keys.SYS_C0012560);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CustomerRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CustomerRecord, ?>>asList(Keys.FK_CUSTOMER_STORE, Keys.FK_CUSTOMER_ADDRESS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Customer as(String alias) {
		return new Customer(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Customer rename(String name) {
		return new Customer(name, null);
	}
}
