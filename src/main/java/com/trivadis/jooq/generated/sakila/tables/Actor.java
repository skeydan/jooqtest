/**
 * This class is generated by jOOQ
 */
package com.trivadis.jooq.generated.sakila.tables;


import com.trivadis.jooq.generated.sakila.DefaultSchema;
import com.trivadis.jooq.generated.sakila.Keys;
import com.trivadis.jooq.generated.sakila.tables.records.ActorRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Actor extends TableImpl<ActorRecord> {

	private static final long serialVersionUID = -2016621735;

	/**
	 * The reference instance of <code>ACTOR</code>
	 */
	public static final Actor ACTOR = new Actor();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ActorRecord> getRecordType() {
		return ActorRecord.class;
	}

	/**
	 * The column <code>ACTOR.ACTOR_ID</code>.
	 */
	public final TableField<ActorRecord, BigDecimal> ACTOR_ID = createField("ACTOR_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>ACTOR.FIRST_NAME</code>.
	 */
	public final TableField<ActorRecord, String> FIRST_NAME = createField("FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>ACTOR.LAST_NAME</code>.
	 */
	public final TableField<ActorRecord, String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>ACTOR.LAST_UPDATE</code>.
	 */
	public final TableField<ActorRecord, Date> LAST_UPDATE = createField("LAST_UPDATE", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * Create a <code>ACTOR</code> table reference
	 */
	public Actor() {
		this("ACTOR", null);
	}

	/**
	 * Create an aliased <code>ACTOR</code> table reference
	 */
	public Actor(String alias) {
		this(alias, ACTOR);
	}

	private Actor(String alias, Table<ActorRecord> aliased) {
		this(alias, aliased, null);
	}

	private Actor(String alias, Table<ActorRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ActorRecord> getPrimaryKey() {
		return Keys.SYS_C0012526;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ActorRecord>> getKeys() {
		return Arrays.<UniqueKey<ActorRecord>>asList(Keys.SYS_C0012526);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Actor as(String alias) {
		return new Actor(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Actor rename(String name) {
		return new Actor(name, null);
	}
}
